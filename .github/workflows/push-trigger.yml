name: inji-web build upon a push

on:
  release:
    types: [published]
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - '!release-branch'
      - release*
      - master
      - 1.*
      - develop
      - qa-develop
      - MOSIP*
      - injiweb*

jobs:
  build-dockers-inji-web:
    strategy:
      matrix:
        include:
          - SERVICE_LOCATION: "inji-web"
            SERVICE_NAME: "inji-web"
      fail-fast: false
    name: ${{ matrix.SERVICE_NAME }}
    uses: mosip/kattu/.github/workflows/docker-build.yml@master
    with:
      SERVICE_LOCATION: ${{ matrix.SERVICE_LOCATION }}
      SERVICE_NAME: ${{ matrix.SERVICE_NAME }}
    secrets:
      DEV_NAMESPACE_DOCKER_HUB: ${{ secrets.DEV_NAMESPACE_DOCKER_HUB }}
      ACTOR_DOCKER_HUB: ${{ secrets.ACTOR_DOCKER_HUB }}
      RELEASE_DOCKER_HUB: ${{ secrets.RELEASE_DOCKER_HUB }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  sonar-analysis-inji-web:
    if: "${{ github.event_name != 'pull_request' }}"
    needs: build-dockers-inji-web
    uses: mosip/kattu/.github/workflows/npm-sonar-analysis.yml@master-java21
    with:
      SERVICE_LOCATION: ./inji-web
      SONAR_URL: 'https://sonarcloud.io'
      PROJECT_KEY: 'mosip_inji-web'
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      ORG_KEY: ${{ secrets.ORG_KEY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  build-maven-inji-web-test:
    uses: mosip/kattu/.github/workflows/maven-build.yml@master-java21
    with:
      SERVICE_LOCATION: ./inji-web-test
      BUILD_ARTIFACT: inji-web-test
    secrets:
      OSSRH_USER: ${{ secrets.OSSRH_USER }}
      OSSRH_SECRET: ${{ secrets.OSSRH_SECRET }}
      OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
      GPG_SECRET: ${{ secrets.GPG_SECRET }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  build-inji-web-test-local:
    needs: build-maven-inji-web-test
    runs-on: ubuntu-latest
    env:
      NAMESPACE: ${{ secrets.DEV_NAMESPACE_DOCKER_HUB }}
      SERVICE_NAME: inji-web-test
      SERVICE_LOCATION: inji-web-test
      BUILD_ARTIFACT: inji-web-test-local
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          server-id: ossrh
          settings-path: ${{ github.workspace }}

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install xmlstarlet
        run: sudo apt-get install -y xmlstarlet

      - name: Verify MPL 2.0 License
        run: |
          if [ ! -f "./inji-web-test/pom.xml" ]; then
            echo "Error: pom.xml not found in inji-web-test!"
            exit 1
          fi
          LICENSE_NAME=$(xmlstarlet sel -N s="http://maven.apache.org/POM/4.0.0" -t -v "//s:project/s:licenses[1]/s:license/s:name" -nl ./inji-web-test/pom.xml)
          if [[ "$LICENSE_NAME" != "MPL 2.0" ]]; then
            echo "Error: License is not MPL 2.0, found '$LICENSE_NAME' instead!"
            exit 1
          fi

      - name: Setup the settings file for OSSRH server
        run: |
          cat <<EOF > $GITHUB_WORKSPACE/settings.xml
          <settings>
            <servers>
              <server>
                <id>ossrh</id>
                <username>${{ secrets.OSSRH_USER }}</username>
                <password>${{ secrets.OSSRH_SECRET }}</password>
              </server>
            </servers>
            <profiles>
              <profile>
                <id>ossrh</id>
                <activation><activeByDefault>true</activeByDefault></activation>
                <properties>
                  <gpg.executable>gpg2</gpg.executable>
                  <gpg.passphrase>${{ secrets.GPG_SECRET }}</gpg.passphrase>
                </properties>
              </profile>
            </profiles>
          </settings>
          EOF

      - name: Build inji-web-test with Maven
        run: |
          cd ${{ env.SERVICE_LOCATION }}
          mvn -U -B package -Dmaven.wagon.http.retryHandler.count=2 --file pom.xml -s $GITHUB_WORKSPACE/settings.xml

      - name: Ready the spring boot artifacts
        if: ${{ !contains(github.ref, 'master') && !contains(github.ref, 'main') }}
        run: |
          find ${{ env.SERVICE_LOCATION }} -path '*/target/*' -name '*.jar' -type f -exec zip ${{ env.BUILD_ARTIFACT }}.zip {} +

      - name: Upload the spring boot JARs
        if: ${{ !contains(github.ref, 'master') && !contains(github.ref, 'main') }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILD_ARTIFACT }}
          path: ${{ env.BUILD_ARTIFACT }}.zip

      - name: Send Slack notification on failure
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,commit,workflow,job
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()
