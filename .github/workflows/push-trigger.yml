name: inji-web build upon a push

on:
  release:
    types: [published]
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - '!release-branch'
      - release*
      - master
      - 1.*
      - develop
      - qa-develop
      - MOSIP*
      - injiweb*

jobs:
  build-dockers-inji-web:
    strategy:
      matrix:
        include:
          - SERVICE_LOCATION: "inji-web"
            SERVICE_NAME: "inji-web"
      fail-fast: false
    name: ${{ matrix.SERVICE_NAME }}
    uses: mosip/kattu/.github/workflows/docker-build.yml@master
    with:
      SERVICE_LOCATION: ${{ matrix.SERVICE_LOCATION }}
      SERVICE_NAME: ${{ matrix.SERVICE_NAME }}
    secrets:
      DEV_NAMESPACE_DOCKER_HUB: ${{ secrets.DEV_NAMESPACE_DOCKER_HUB }}
      ACTOR_DOCKER_HUB: ${{ secrets.ACTOR_DOCKER_HUB }}
      RELEASE_DOCKER_HUB: ${{ secrets.RELEASE_DOCKER_HUB }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  build-inji-web-test-local:
    needs: build-maven-inji-web-test
    runs-on: ubuntu-latest
    env:
      NAMESPACE: ${{ secrets.dev_namespace_docker_hub }}
      SERVICE_NAME: inji-web-test
      SERVICE_LOCATION: inji-web-test
      BUILD_ARTIFACT: inji-web-test
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build inji-web-test with Maven
        run: |
          cd ${{ env.SERVICE_LOCATION }}
          mvn -U -B package -DskipTests --file pom.xml

      - name: Fix Permissions Issue
        run: |
          chmod -R 755 ${{ env.SERVICE_LOCATION }}/target || echo "Skipping chmod"

      - name: Ready the springboot artifacts
        run: |
          echo "Creating ZIP file with executable JARs..."
          find ${{ env.SERVICE_LOCATION }}/target -name '*-shaded.jar' -type f -exec chmod +x {} \;
          find ${{ env.SERVICE_LOCATION }}/target -name '*-shaded.jar' -type f -exec zip -r ${{ env.BUILD_ARTIFACT }}.zip {} +
          ls -lh ${{ env.BUILD_ARTIFACT }}.zip || echo "ZIP file was not created!"

      - name: Upload the springboot jars
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILD_ARTIFACT }}
          path: ${{ env.BUILD_ARTIFACT }}.zip
